
import { Banner } from '@/components/Banner'
import { Footer } from '@/components/Footer';
import { Header } from '@/components/Header'
import { Row } from '@/components/Row';
import Head from 'next/head'
import { useState } from 'react';
import { useRecoilValue } from 'recoil';
import requests from '../../utils/requests';


export default function Home({
  netflixOriginals,
  trendingNow,
  topRated,
  actionMovies,
  comedyMovies,
  horrorMovies,
  romanceMovies,
  documentaries,
  tvShows
}) {
  // console.log(tvShows.results);



  return (
    <div className='relative h-screen bg-gradient-to-b from-gray-900/10 to-[#010511] lg:h-[140vh]'>
      <Head>
        <title>4 Frame - Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Header */}
      <Header />
      <main className='relative pl-4 pb-24 lg:space-y-24 lg:pl-16'>
        <Banner
          netflixOriginals={netflixOriginals}
          tvShows={tvShows}
        />
        {/* Section */}
        <section className='md:space-y-10'>
          {/* <Row title="Trending Now" movies={trendingNow} /> */}
          <Row title="Originales" movies={netflixOriginals} />
          <Row title="Mejor Valoradas" movies={topRated} />
          <Row title="Thrillers de acciÃ³n" movies={actionMovies} />
          {/* {list.length > 0 && <Row title="My List" movies={list} />} */}
          <Row title="Comedias" movies={comedyMovies} />
          {/* <Row title="Scary Movies" movies={horrorMovies} /> */}
          {/* <Row title="Romance Movies" movies={romanceMovies} /> */}
          <Row title="Documentales" movies={documentaries} />
        </section>
      </main>
      <Footer/>
    </div>
  )
}


export const getServerSideProps = async () => {

  const [
    netflixOriginals,
    trendingNow,
    topRated,
    actionMovies,
    comedyMovies,
    horrorMovies,
    romanceMovies,
    documentaries,
    tvShows

  ] = await Promise.all([
    fetch(requests.fetchNetflixOriginals).then((res) => res.json()),
    fetch(requests.fetchTrending).then((res) => res.json()),
    fetch(requests.fetchTopRated).then((res) => res.json()),
    fetch(requests.fetchActionMovies).then((res) => res.json()),
    fetch(requests.fetchComedyMovies).then((res) => res.json()),
    fetch(requests.fetchHorrorMovies).then((res) => res.json()),
    fetch(requests.fetchRomanceMovies).then((res) => res.json()),
    fetch(requests.fetchDocumentaries).then((res) => res.json()),
    fetch(requests.fetchTvShows).then((res) => res.json()),
  ])

  return {
    props: {
      netflixOriginals,
      trendingNow,
      topRated,
      actionMovies,
      comedyMovies,
      horrorMovies,
      romanceMovies,
      documentaries,
      tvShows
    },
  }
}






